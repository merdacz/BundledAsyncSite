//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BundledAsyncSite.Host.EventHandlingServiceProxy {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventBase", Namespace="http://schemas.datacontract.org/2004/07/BundledAsyncSite.Host.Events")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BundledAsyncSite.Host.EventHandlingServiceProxy.AccountCreated))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BundledAsyncSite.Host.EventHandlingServiceProxy.PerformLongRunningTask))]
    public partial class EventBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountCreated", Namespace="http://schemas.datacontract.org/2004/07/BundledAsyncSite.Host.Events")]
    [System.SerializableAttribute()]
    public partial class AccountCreated : BundledAsyncSite.Host.EventHandlingServiceProxy.EventBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PerformLongRunningTask", Namespace="http://schemas.datacontract.org/2004/07/BundledAsyncSite.Host.Events")]
    [System.SerializableAttribute()]
    public partial class PerformLongRunningTask : BundledAsyncSite.Host.EventHandlingServiceProxy.EventBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MillisecondsToRunField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MillisecondsToRun {
            get {
                return this.MillisecondsToRunField;
            }
            set {
                if ((this.MillisecondsToRunField.Equals(value) != true)) {
                    this.MillisecondsToRunField = value;
                    this.RaisePropertyChanged("MillisecondsToRun");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EventHandlingServiceProxy.EventHandlingService")]
    public interface EventHandlingService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/EventHandlingService/Handle")]
        void Handle(BundledAsyncSite.Host.EventHandlingServiceProxy.EventBase @event);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface EventHandlingServiceChannel : BundledAsyncSite.Host.EventHandlingServiceProxy.EventHandlingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EventHandlingServiceClient : System.ServiceModel.ClientBase<BundledAsyncSite.Host.EventHandlingServiceProxy.EventHandlingService>, BundledAsyncSite.Host.EventHandlingServiceProxy.EventHandlingService {
        
        public EventHandlingServiceClient() {
        }
        
        public EventHandlingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EventHandlingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EventHandlingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EventHandlingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Handle(BundledAsyncSite.Host.EventHandlingServiceProxy.EventBase @event) {
            base.Channel.Handle(@event);
        }
    }
}
